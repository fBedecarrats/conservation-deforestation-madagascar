---
output: html_document
editor_options: 
  chunk_output_type: console
---

# Méthode d'appariement

On a vu dans le chapitre précédent que les comparaisons simples réalisées entre les premières et les dernières aires à avoir été formellement protégées pose problème.

On va maintenant chercher à renforcer la comparabilité entre le goupe de traitment et le groupe de contrôle en réalisant un appariemment (cf. diapos de présentation).

On va utiliser le package {MatchIt}: ne pas hésiter à se référer à la documentation du package : \[TODO: insérer le lien vers la doc\]

On va commencer par réaliser quelques ajustements, car {MatchIt} requiert qu'aucune valeur des variables mobilisées ne soit manquante. On va donc retirer les observations comportant des `NA`.

```{r}
library(tidyverse) # Simplifie la manipulation de données
library(lubridate) # Simplifie les opérations sur des dates
library(sf) # Pour traiter les données spatiales
library(MatchIt) # Pour réaliser les appariements.
library(gt) # Pour faire de jolies tables
library(stargazer) # Pour préssenter les résultats de régressions

# Désactiver les notations scientifiques
options(scipen =999)
# On recharge les données préparées dans le chapitre 3
load("data/ch3_AP_Vahatra.rds")

# Harmoniser les données entre avant et après.
load("data/rct_AP_Mada.rds")


rct_AP_Mada_noNA <- rct_AP_Mada %>%
  # On enlève les observations pour lesquelles il manque des valeurs
  filter(!is.na(`Déforestation 1996-2016 (%)`)) %>%
  filter(!is.na(dist_ville)) %>%
  # La vatiable de traitement doit être recodée en [0, 1]
  mutate(traitement = ifelse(Groupe == "Traitement", 1, 0))

rct_AP_Mada_noNA %>%
  group_by(Groupe) %>%
  summarize(`Nombre d'aires protégées` = n()) %>%
  gt() %>%
  tab_header("Observations par groupe avant appariemment") %>%
  tab_source_note("Source : Association Vahatra et Carvalho et al. 2018")
```

Pour commencer, on va estimer le un modèle qui estime dans quel mesure la propension pour une aire d'avoir été protégée avant 2015 dépend de sa taille, de son taux de couverture forestière en 1996, de son altitude, de son caractère accidenté et de sa distance d'une ville d'au moins 5000 habitants.

Cette spécification peut se représenter selon l'équation suivante : \[TODO: revoir la spécification au format standard\]

$$
T = A + B + C + D + E  
$$

Où Y est le traitement, A est la taille (surface en hectares, B le taux de couverture forestière en 1996, C l'altitude, D, le caractère accidenté et E le temps de parcours à une ville d'au moins 5000 habitants.

Cette même formule est encodée en R de la manière suivante :

```{r}
#| code-fold: false
pscor <- traitement ~  `Surface (ha)` + 
                       `Couvert forestier en 1996 (%)`+ 
                        altitude +
                        indice_accidente + 
                        dist_ville
```

On va maintenant réaliser une régression pour connaître l'influence de ces facteurs dans la désignation des aires comes protégées.

```{r}

reg_select <- glm(formula = pscor,
                  family = binomial(link = "probit"),
                  data = rct_AP_Mada_noNA)

stargazer(reg_select, type = "text")
```

On va maintenant utiliser ce modèle pour comparer les aires protégées traitées en premier par rapport à celles traitées plus récemment.

```{r}
# Calcul du matching
def_96_16_match <- matchit(formula = pscor,
                           family = binomial(link = "probit"),
                           method = "nearest",
                           discard = "none",
                           replace = FALSE,
                           distance = "glm",
                           data = rct_AP_Mada_noNA)

print(def_96_16_match)
```


Le modèle qu'on utilise pour estimer l'impact est très proche de celui exposé ci-dessus, à la différence que la variable de traitement passe dans la partie droite, et qu'elle est remplacée par la déforestation.

$$
Y = T + A + B + C + D + E
$$

Où Y est la déforestatoin, T est le traitement, A est la taille (surface en hectares, B le taux de couverture forestière en 1996, C l'altitude, D, le caractère accidenté et E le temps de parcours à une ville d'au moins 5000 habitants.

Cette formule est codée en R de la manière suivante :

```{r}
# On extrait la donnée de l'appariement

#| code-fold: false
estimp <- `Déforestation 1996-2016 (%)` ~   
                          traitement +
                          `Surface (ha)` + 
                          `Couvert forestier en 1996 (%)`+ 
                          altitude +
                          indice_accidente + 
                          dist_ville
```

On va donc réaliser une régression, en utilisant comme pondération les pondérations générées par l'algorithme d'appariement.

```{r}
# On extrait les données de l'appariement
def_96_16_match_data <- match.data(def_96_16_match)
# On effectue une régression simple avec la formule précédente
def_96_16_match_est <- lm(formula = estimp,
                          data = def_96_16_match_data,
                          weights = weights)
# On visualise les résultats
stargazer(def_96_16_match_est, type = "text")
```

### Exercice simple

Analysez, interprétez et critiquez les résultats ci-dessus.

### Exercice intermédiaire

Ajoutez des variables d'interne et modifiez les paramètres de la fonction de matching.

### Exercice avancé

Réalisez une analyse analogue avec les données de déforestation TMF. Rédigez une analyse interprétative.
